name: Build CI

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # schedule:
  #   - cron: "38 7 * * *"
  push:
    branches:
      - "develop"
      - "feature/*"
      - "master"
      - "main"
    # # Publish semver tags as releases.
    # tags:
    #   - "v*.*.*"
  # pull_request:
  #   branches:
  #     - "master"
  #     - "main"
  # pull_request_target:
  workflow_call:
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

# permissions:
#   contents: write

jobs:
  # label:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     pull-requests: write
  #   steps:
  #     - uses: actions/labeler@v4
  #       with:
  #         repo-token: "${{ secrets.GITHUB_TOKEN }}"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: "latest" # or pin to an specific version, e.g. "0.7.1"
      # - name: Docker login # to avoid dockerhub rate-limiting
      #   run: docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password "${{ secrets.DOCKERHUB_PASSWORD }}"
      - name: what version is installed?
        run: earthly --version

      - run: |
          echo ${{ runner.os }}-${{ hashFiles('./dl/**/.lock') }}
          echo ${{ runner.os }}-${{ hashFiles('./output/dl/**/.lock') }}

      - name: Cache Primes
        id: cache-dl
        uses: actions/cache@v3
        with:
          path: ./output/dl
          key: ${{ runner.os }}-cache-dl-${{ hashFiles('./dl/**/.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-dl-

      - name: Cache Primes
        id: cache-ccache
        uses: actions/cache@v3
        with:
          path: ./output/ccache
          key: ${{ runner.os }}-cache-ccache-${{ hashFiles('./dl/**/.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-ccache-

      - run: |
          # echo ${{ runner.os }}-${{ hashFiles('./dl/**/.lock') }}
          echo ${{ runner.os }}-cache-dl-${{ hashFiles('./output/dl/**/.lock') }}
          echo ${{ runner.os }}-cache-ccache-${{ hashFiles('./output/ccache/**') }}
          echo ${{ steps.cache-dl.outputs.cache-hit }}
          echo ${{ steps.cache-ccache.outputs.cache-hit }}
          echo steps.cache.outputs.cache-hit != 'true'

      - run: |
          # earthly -ci --push +all
          # ./earthly.sh -ci +all
          # earthly -ci +all
          ./earthly.sh +build
      # - name: run the earthly hello world
      #   run: earthly github.com/earthly/hello-world:main+hello
      - run: |
          find ./output

      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: |
            ./output/images/

  # build1:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: configure
  #       run: ./configure

  #     - name: Install dependencies
  #       run: make

  #     - name: Run check
  #       run: make check

  #     - name: Run distcheck
  #       run: make distcheck

  # build2:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Build the Docker image
  #       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  # build3:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #     # This is used to complete the identity challenge
  #     # with sigstore/fulcio when running outside of PRs.
  #     id-token: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     # Install the cosign tool except on PR
  #     # https://github.com/sigstore/cosign-installer
  #     - name: Install cosign
  #       if: github.event_name != 'pull_request'
  #       uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
  #       with:
  #         cosign-release: "v1.13.1"

  #     # Workaround: https://github.com/docker/build-push-action/issues/461
  #     - name: Setup Docker buildx
  #       uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

  #     # Login against a Docker registry except on PR
  #     # https://github.com/docker/login-action
  #     - name: Log into registry ${{ env.REGISTRY }}
  #       if: github.event_name != 'pull_request'
  #       uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     # Extract metadata (tags, labels) for Docker
  #     # https://github.com/docker/metadata-action
  #     - name: Extract Docker metadata
  #       id: meta
  #       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  #     # Build and push Docker image with Buildx (don't push on PR)
  #     # https://github.com/docker/build-push-action
  #     - name: Build and push Docker image
  #       id: build-and-push
  #       uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
  #       with:
  #         context: .
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max

  #     # Sign the resulting Docker image digest except on PRs.
  #     # This will only write to the public Rekor transparency log when the Docker
  #     # repository is public to avoid leaking data.  If you would like to publish
  #     # transparency data even for private images, pass --force to cosign below.
  #     # https://github.com/sigstore/cosign
  #     - name: Sign the published Docker image
  #       if: ${{ github.event_name != 'pull_request' }}
  #       env:
  #         COSIGN_EXPERIMENTAL: "true"
  #       # This step uses the identity token to provision an ephemeral certificate
  #       # against the sigstore community Fulcio instance.
  #       run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
